{
    "contents" : "#### COP Data Analysis ####\n# This is a collaborative project between Dr. Eadric Bressel, Adam Raikes, Talin\n# Louder, and Devin Patterson. In this arm of the analysis, I will analyze the\n# raw X and Y COP data to examine the multiscale complexity of single and dual\n# task postural sway on land and water.\n\n# The data was provided to me as a .xlsx file with 4 tabs. Tabs 4 and 5 are the\n# COPx and Y. However, these are untidy data with blank columns to separate\n# conditions. Prior to computing multiscale entropy, this dataset requires\n# substantial cleaning.\n\n# This script is the second phase of analysis. MSE has alreay been computed on\n# the dataset. This analysis will employ a 2x2 repeated measures design. \n\n# To account for the possibility of nonstationarity in the data, the analysis\n# will look at both raw and detrended COP data.\n\n#### Load libraries ####\nlibrary(tidyverse)\nlibrary(nlme)\nlibrary(lsmeans)\n\n#### Load MSE data ####\nmse.x <- read.csv(\"Data Files/MSE X.csv\", header = FALSE)\nmse.y <- read.csv(\"Data Files/MSE Y.csv\", header = FALSE)\nmse.x.detrended <- read.csv(\"Data Files/Detrended X MSE.csv\", header = FALSE)\nmse.y.detrended <- read.csv(\"Data Files/Detrended Y MSE.csv\", header = FALSE)\n\n#### Add subject indicators to each data frame\nmse.x <- mutate(mse.x, Participant = subject.vec)\nmse.y <- mutate(mse.y, Participant = subject.vec)\nmse.x.detrended <- mutate(mse.x.detrended, Participant = subject.vec)\nmse.y.detrended <- mutate(mse.y.detrended, Participant = subject.vec)\n\n#### Reshape to long and reformat the scale value column\nmse.x <- mse.x %>%\n  select(-V1) %>%\n  gather(Scale, MSE, -Participant) %>%\n  mutate(Direction = \"Medial-Lateral\",\n         Type = \"Raw\")\nmse.x$Scale <- as.numeric(gsub(\"V\",\"\", mse.x$Scale))\n\nmse.x.detrended <- mse.x.detrended %>%\n  select(-V1) %>%\n  gather(Scale, MSE, -Participant) %>%\n  mutate(Direction = \"Medial-Lateral\",\n         Type = \"Detrended\")\nmse.x.detrended$Scale <- as.numeric(gsub(\"V\",\"\", mse.x.detrended$Scale))\n\nmse.y <- mse.y %>%\n  select(-V1) %>%\n  gather(Scale, MSE, -Participant) %>%\n  mutate(Direction = \"Anterior-Posterior\",\n         Type = \"Raw\")\nmse.y$Scale <- as.numeric(gsub(\"V\",\"\", mse.y$Scale))\n\nmse.y.detrended <- mse.y.detrended %>%\n  select(-V1) %>%\n  gather(Scale, MSE, -Participant) %>%\n  mutate(Direction = \"Anterior-Posterior\",\n         Type = \"Detrended\")\nmse.y.detrended$Scale <- as.numeric(gsub(\"V\",\"\", mse.y.detrended$Scale))\n\n#### Join data frames in long format ####\nmse.data <- bind_rows(list(mse.x, mse.x.detrended, mse.y, mse.y.detrended))\n\n#### Split participant column ####\nmse.data <- extract(mse.data, Participant, into = c(\"Subject\", \"E\", \"T\"),\n                    \"([0-2][0-9])([L|W])([S|D])\")\n\nstr(mse.data)\nmse.data <- mutate_at(mse.data, vars(Subject), funs(as.factor)) %>%\n  mutate(Task = ifelse(T == \"D\", \"Dual Task\", \"Single Task\"),\n            Environment = ifelse(E == \"L\", \"Land\", \"Water\")) %>%\n  select(-E, -T) %>%\n  mutate_if(is.character, as.factor)\n\nstr(mse.data)\n\n#### Split into ML and AP directions ####\nap.mse <- filter(mse.data, Direction == \"Anterior-Posterior\")\nml.mse <- filter(mse.data, Direction == \"Medial-Lateral\")\n\n#### Plot 2x2 frames for each direction ####\n# Plots of single vs dual task per environment\nggplot(data = ap.mse, aes(x = Scale, y = MSE, group = interaction(Task, Subject),\n                          color = Task)) +\n  facet_grid(Type ~ Environment) +\n  geom_line(alpha = 0.3) +\n  geom_smooth(se = FALSE, aes(group = Task, color = Task), size = 2)\n  \n\nggplot(data = ml.mse, aes(x = Scale, y = MSE, group = interaction(Task, Subject),\n                          color = Task)) +\n  facet_grid(Type ~ Environment) +\n  geom_line(alpha = 0.3) +\n  geom_smooth(aes(group = Task, color = Task), se = FALSE, size = 2)\n\n# Plots of Land vs Water for each task type\nggplot(data = ap.mse, aes(x = Scale, y = MSE, group = interaction(Environment, Subject),\n                          color = Environment)) +\n  facet_grid(Type ~ Task) +\n  geom_line(alpha = 0.3) +\n  geom_smooth(aes(group = Environment, color = Environment), se = FALSE, size = 2)\n\nggplot(data = ml.mse, aes(x = Scale, y = MSE, group = interaction(Environment, Subject),\n                          color = Environment)) +\n  facet_grid(Type ~ Task) +\n  geom_line(alpha = 0.3) +\n  geom_smooth(aes(group = Environment, color = Environment), se = FALSE, size = 2)\n\n#### Compute CI ####\nap.complexity <- group_by(ap.mse, Subject, Environment, Task, Type) %>%\n  summarise(CI = mean(MSE))\n\nml.complexity <- group_by(ml.mse, Subject, Environment, Task, Type) %>%\n  summarise(CI = mean(MSE))\n\n#### Separate dataframes for ease in subsetting for models ####\nml.raw <- filter(ml.complexity, Type == \"Raw\") %>%\n  select(-Type)\n\nml.dt <- filter(ml.complexity, Type == \"Detrended\") %>%\n  select(-Type)\n\nap.raw <- filter(ap.complexity, Type == \"Raw\") %>%\n  select(-Type)\n\nap.dt <- filter(ap.complexity, Type == \"Detrended\") %>%\n  select(-Type)\n\n##### Repeated measures models with unstructured covariance ####\nap.raw.unstructured <- gls(CI ~ Environment + Task + Environment:Task,\n                           cor = corSymm(form = ~1|Subject),\n                           data = ap.raw,\n                           method = \"REML\")\nap.dt.unstructured <- gls(CI ~ Environment + Task + Environment:Task,\n                          cor = corSymm(form = ~1|Subject),\n                          data = ap.dt,\n                          method = \"REML\")\nml.raw.unstructured <- gls(CI ~ Environment + Task + Environment:Task,\n                           cor = corSymm(form = ~1|Subject),\n                           data = ml.raw,\n                           method = \"REML\")\nml.dt.unstructured <- gls(CI ~ Environment + Task + Environment:Task,\n                          cor = corSymm(form = ~1|Subject),\n                          data = ml.dt,\n                          method = \"REML\")\n\n#### Repeated measures models with compound symmetry####\nap.raw.cs <- gls(CI ~ Environment + Task + Environment:Task,\n                           cor = corCompSymm(form = ~1|Subject),\n                           data = ap.raw,\n                           method = \"REML\")\nap.dt.cs <- gls(CI ~ Environment + Task + Environment:Task,\n                          cor = corCompSymm(form = ~1|Subject),\n                          data = ap.dt,\n                          method = \"REML\")\nml.raw.cs <- gls(CI ~ Environment + Task + Environment:Task,\n                           cor = corCompSymm(form = ~1|Subject),\n                           data = ml.raw,\n                           method = \"REML\")\nml.dt.cs <- gls(CI ~ Environment + Task + Environment:Task,\n                          cor = corCompSymm(form = ~1|Subject),\n                          data = ml.dt,\n                          method = \"REML\")\n\n#### Model comparison and selection ####\nanova(ap.raw.unstructured, ap.raw.cs)\nanova(ap.dt.unstructured, ap.dt.cs)\nanova(ml.raw.unstructured, ml.raw.cs)\nanova(ml.dt.unstructured, ml.dt.cs)\n\n#### Maximum likelihood models ####\nap.raw.maxlik <- gls(CI ~ Environment + Task + Environment:Task,\n                     cor = corSymm(form = ~1|Subject),\n                     data = ap.raw,\n                     method = \"ML\")\nap.dt.maxlik <- gls(CI ~ Environment + Task + Environment:Task,\n                    cor = corCompSymm(form = ~1|Subject),\n                    data = ap.dt,\n                    method = \"ML\")\nml.raw.maxlik <- gls(CI ~ Environment + Task + Environment:Task,\n                     cor = corCompSymm(form = ~1|Subject),\n                     data = ml.raw,\n                     method = \"ML\")\nml.dt.maxlik <- gls(CI ~ Environment + Task + Environment:Task,\n                    cor = corCompSymm(form = ~1|Subject),\n                    data = ml.dt,\n                    method = \"ML\")\n\n#### Output summaries ####\nsummary(ap.raw.maxlik)\nsummary(ap.dt.maxlik)\nsummary(ml.dt.maxlik)\nsummary(ml.raw.maxlik)\n\nplot(ap.raw.maxlik)\nplot(ap.dt.maxlik)\nplot(ml.dt.maxlik)\nplot(ml.raw.maxlik)\n\nanova(ap.raw.maxlik, type = \"marginal\")\nanova(ap.dt.maxlik, type = \"marginal\")\nanova(ml.dt.maxlik, type = \"marginal\")\nanova(ml.raw.maxlik, type = \"marginal\")\n\ncontrast(lsmeans(ap.dt.maxlik, ~Task), method = \"pairwise\")\n\n#### Boxplots with points ####\nggplot(data = ap.raw, aes(x = Environment, y = CI, color = Task)) +\n  geom_boxplot()\n\n#### Write output CSVs for Dr. Bressel ####\n# Raw data\nap.raw.out <- unite(ap.raw, Condition, Environment, Task, sep = \": \") %>%\n  spread(Condition, CI)\n\nwrite.table(ap.raw.out, \"Data Files/Anterior-Posterior Complexity.csv\",\n            col.names = TRUE, row.names = FALSE, sep = \",\")\n\nml.raw.out <- unite(ml.raw, Condition, Environment, Task, sep = \": \") %>%\n  spread(Condition, CI)\n\nwrite.table(ml.raw.out, \"Data Files/Medial-Lateral Complexity.csv\",\n            col.names = TRUE, row.names = FALSE, sep = \",\")\n\n# Detrended data\nap.dt.out <- unite(ap.dt, Condition, Environment, Task, sep = \": \") %>%\n  spread(Condition, CI)\n\nwrite.table(ap.dt.out, \"Data Files/Detrended Anterior-Posterior Complexity.csv\",\n            col.names = TRUE, row.names = FALSE, sep = \",\")\n\nml.dt.out <- unite(ml.dt, Condition, Environment, Task, sep = \": \") %>%\n  spread(Condition, CI)\n\nwrite.table(ml.dt.out, \"Data Files/Detrended Medial-Lateral Complexity.csv\",\n            col.names = TRUE, row.names = FALSE, sep = \",\")\n",
    "created" : 1477952350957.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "547458427",
    "id" : "5D4D9DBA",
    "lastKnownWriteTime" : 1478030401,
    "path" : "~/GitHub/COP-Data/R Scripts/Entropy Analysis.R",
    "project_path" : "R Scripts/Entropy Analysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}